name: Build & Test

on:
  push:
    branches-ignore:
      - master

jobs:
  build-test:
    environment: Conan

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - {
              name: Windows MSVC,
              os: windows-latest,
              build_type: Release,
              cc: cl,
              cxx: cl,
              generator: Visual Studio 16 2019
            }
          - {
              name: Ubuntu GCC,
              os: ubuntu-latest,
              build_type: Release,
              cc: gcc,
              cxx: g++,
              generator: Ninja
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Install tools (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: sudo apt-get install libgl-dev ninja-build

      - name: Install Conan
        run: |
          pip install conan
          conan config set general.revisions_enabled=1
          conan remote add davidbourgault https://artifactory.davidbourgault.ca/artifactory/api/conan/conan
          conan user -p ${{ secrets.CONAN_PASSWORD }} -r davidbourgault david

      - name: Create directories
        run: mkdir build

      - name: Install Third Parties (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        working-directory: build
        run: conan install .. -s compiler.libcxx=libstdc++11 -s build_type=${{ matrix.config.build_type }} -r davidbourgault --build=missing

      - name: Install Third Parties (Windows)
        if: matrix.config.os == 'windows-latest'
        working-directory: build
        run: conan install .. -s compiler="Visual Studio" -s compiler.version=16 -s build_type=${{ matrix.config.build_type }} -r davidbourgault --build=missing

      - name: Upload
        run: conan upload qt/* --remote davidbourgault --all --confirm

      - name: Configure
        working-directory: build
        run: cmake .. -G "${{ matrix.config.generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
        
      - name: Build
        working-directory: build
        run: cmake --build . --config ${{ matrix.config.build_type }}

      - name: Test
        working-directory: build
        run: ctest --rerun-failed --output-on-failure